{"version":3,"file":"component---src-pages-projects-tsx-268ebc4a106817451f72.js","mappings":"8LAqBA,EAVoB,SAAC,GAA0D,IAAzDA,EAAwD,EAAxDA,IAAKC,EAAmD,EAAnDA,IAAKC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,SACtC,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UCZS,4BDaVD,EAAAA,cAACE,EAAAA,EAAD,CAAaC,OAAQC,EAAAA,EAAAA,GAASR,GAA2BC,IAAMA,IAC7DE,EACFC,EAAAA,cAAAA,SAAAA,CAAQK,QAAS,kBAAMC,OAAOC,KAAKT,EAAQ,YAA3C,YEuBR,EAjBqB,SAAC,GAA4E,IAAjEU,EAAgE,EAAzEC,KAASD,kBAE7B,OACIR,EAAAA,cAACU,EAAAA,EAAD,KACIV,EAAAA,cAAAA,MAAAA,CAAKC,UDxBM,iCCyBNO,EAAkBG,MAAMC,KAAI,SAACC,GAC1B,OACIb,EAAAA,cAACc,EAAD,CAAaC,IAAKF,EAAQG,GAAIpB,IAAKiB,EAAQI,YAAYd,MAAON,IAAKgB,EAAQI,YAAYC,KAAMpB,OAAQe,EAAQI,YAAYnB,QACrHE,EAAAA,cAAAA,MAAAA,CAAKmB,wBAAyB,CAAEC,OAAQP,EAAQQ","sources":["webpack://birjot-bala/./src/components/projectCard.tsx","webpack://birjot-bala/./src/styles/card.module.css","webpack://birjot-bala/./src/pages/projects.tsx"],"sourcesContent":["import { GatsbyImage, getImage, IGatsbyImageData } from 'gatsby-plugin-image';\nimport React from 'react'\nimport { card } from '../styles/card.module.css'\n\ninterface CardProps {\n    img: IGatsbyImageData;\n    alt: string;\n    github: string;\n    children: JSX.Element | JSX.Element[];\n}\n\nconst ProjectCard = ({img, alt, github, children}: CardProps): JSX.Element => {\n  return (\n    <div className={ card }>\n        <GatsbyImage image={ getImage(img) as IGatsbyImageData } alt={ alt } />\n        { children }\n        <button onClick={() => window.open(github, \"_blank\")}>Github</button>\n    </div>\n  )\n}\n\nexport default ProjectCard","// extracted by mini-css-extract-plugin\nexport var card = \"card-module--card--Slx9b\";\nexport var cardGroup = \"card-module--cardGroup--irWRa\";","import { graphql, PageProps } from 'gatsby'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport React from 'react'\nimport Layout from '../components/layout'\nimport ProjectCard from '../components/projectCard'\nimport { cardGroup } from \"../styles/card.module.css\"\n\ntype ProjectsProp = {\n    allMarkdownRemark: {\n        nodes: [{\n            frontmatter: {\n                title: string;\n                desc: string;\n                image: IGatsbyImageData;\n                github: string;\n            }\n            html: string;\n            id: string;\n        }]\n    }\n}\n\nconst ProjectsPage = ({ data : { allMarkdownRemark } }: PageProps<ProjectsProp>): JSX.Element => {\n\n    return (\n        <Layout>\n            <div className={cardGroup}>\n                {allMarkdownRemark.nodes.map((project) => {\n                    return (\n                        <ProjectCard key={project.id} img={project.frontmatter.image} alt={project.frontmatter.desc} github={project.frontmatter.github}>\n                            <div dangerouslySetInnerHTML={{ __html: project.html }} />\n                        </ProjectCard>\n                    )\n                })}\n            </div>\n        </Layout>\n    )\n}\n\nexport default ProjectsPage\n\nexport const query = graphql`\n{\n    allMarkdownRemark(filter: {frontmatter: {slug: {glob: \"projects/*\"}}}) {\n        nodes {\n            frontmatter {\n                title\n                desc\n                image {\n                    childImageSharp {\n                        gatsbyImageData (\n                            placeholder: BLURRED\n                        )\n                    }\n                }\n                github\n            }\n            html\n            id\n        }\n    }\n}\n`"],"names":["img","alt","github","children","React","className","GatsbyImage","image","getImage","onClick","window","open","allMarkdownRemark","data","Layout","nodes","map","project","ProjectCard","key","id","frontmatter","desc","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}